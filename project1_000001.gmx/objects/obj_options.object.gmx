<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pm_select</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 45;
y = 300;
var_menu_amount = 0;
var_menu = 0;
var_op_amount = 0;
var_op_pause = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///controls &amp; switch rooms
//Game Play****************************************************
switch(var_menu){
    case 0:{
        var_op_amount = 2;
        switch(var_menu_amount){
            case 0:
                break;
            case 1:
                
                break;
            case 2:
                
                break;
            default:
        }}
        break;
//Display********************************************************
    case 1:{
        var_op_amount = 3;
        switch(var_menu_amount){
            case 0:
                if (keyboard_check_released(vk_space))
                {
                        /*if (var_op_fs = 1)
                        {
                            audio_play_sound(sou_move_curser, 1, false);
                            var_op_fs = 0;
                            
                        }else{
                            audio_play_sound(sou_move_curser, 1, false);
                            var_op_fs = 1;
                        }*/
                    if (keyboard_check_pressed(vk_enter))
                    {
                        if (var_pause == 0)
                        {
                            var_pause = 1;
                        }
                    audio_play_sound(sou_select_curser, 1, false);
                    if (var_pause == 1)
                    {
                        if (keyboard_check_pressed(vk_right))
                        {
                            audio_play_sound(sou_move_curser, 1, false);
                            var_op_fs = 0;
                        }
                        if (keyboard_check_pressed(vk_left))
                        {
                            audio_play_sound(sou_move_curser, 1, false);
                            var_op_fs = 1;
                        }
                        if (keyboard_check_pressed(vk_enter))
                        {
                            var_pause = 0;
                        }
                    }
                }}
                break;
            case 1:
                
                break;
            case 2:
                
                break;
            case 3:
                
                break;
            default:
        }
        break;
        }
//Audio************************************************************
    case 2:{
        var_op_amount = 4;
        switch(var_menu_amount){
            //Master Volum
            case 0:
                if (keyboard_check_released(vk_enter))
                {
                    audio_play_sound(sou_select_curser, 1, false);
                    var_op_pause = 1;
                    if (keyboard_check_pressed(ord("d")))
                    {
                        if (var_master_vol &gt;= 1)
                        {
                            var_master_vol = var_master_vol + 0.1;
                        }
                        sound_global_volume(var_master_vol);
                    }
                    if (keyboard_check_pressed(ord("w")))
                    {
                        if (var_master_vol &lt;= 0)
                        {
                            var_master_vol = var_master_vol - 0.1;
                        }
                        sound_global_volume(var_master_vol);
                    }
                    if (keyboard_check_released(vk_enter))
                    {
                        audio_play_sound(sou_select_curser, 1, false);
                        var_op_pause = 0;
                    }
                break;
                }
            //Music Volum
            case 1:
                if (keyboard_check_released(vk_enter)){
                    audio_play_sound(sou_select_curser, 1, false);
                    var_op_pause = 1;
                    if (keyboard_check_pressed(vk_right)){
                        
                    }
                    if (keyboard_check_pressed(vk_left)){
                    
                    }
                    if (keyboard_check_released(vk_enter)){
                        audio_play_sound(sou_select_curser, 1, false);
                        var_op_pause = 0;
                    }
                break;
                }
            //
            case 2:  
                if (keyboard_check_released(vk_enter)){
                    audio_play_sound(sou_select_curser, 1, false);
                    var_op_pause = 1;
                    if (keyboard_check_pressed(vk_right)){
                        
                    }
                    if (keyboard_check_pressed(vk_left)){
                    
                    }
                    if (keyboard_check_released(vk_enter)){
                        audio_play_sound(sou_select_curser, 1, false);
                        var_op_pause = 0;
                    }  
                break;
                }
            case 3:
                if (keyboard_check_released(vk_enter)){
                    audio_play_sound(sou_select_curser, 1, false);
                    var_op_pause = 1;
                    if (keyboard_check_pressed(vk_right)){
                        
                    }
                    if (keyboard_check_pressed(vk_left)){
                    
                    }
                    if (keyboard_check_released(vk_enter)){
                        audio_play_sound(sou_select_curser, 1, false);
                        var_op_pause = 0;
                    }
                break;
                }
            case 4:
                if (keyboard_check_released(vk_enter)){
                    audio_play_sound(sou_select_curser, 1, false);
                    var_op_pause = 1;
                    if (keyboard_check_pressed(vk_right)){
                        
                    }
                    if (keyboard_check_pressed(vk_left)){
                    
                    }
                    if (keyboard_check_released(vk_enter)){
                        audio_play_sound(sou_select_curser, 1, false);
                        var_op_pause = 0;
                    }
            }
        }
    }
}
//controls
if (var_op_pause = 0)
{
    if (y&lt;=(280+(100*var_op_amount))){   
        if (keyboard_check_pressed(vk_down)){
            audio_play_sound(sou_move_curser, 1, false);
            y=100+y;
            var_menu_amount = var_menu_amount + 1;
        }
    }
    if (y&gt;=316){
        if (keyboard_check_pressed(vk_up)){
            audio_play_sound(sou_move_curser, 1, false);
            y=y-100;
            var_menu_amount = 1 - var_menu_amount;
        }
    }
//move sideways
    if (keyboard_check_pressed(vk_right)){
        audio_play_sound(sou_move_curser, 1, false);
        var_menu = var_menu + 1;
        if (var_menu == 3){
            var_menu = 0;
        }
        var_menu_amount = 0;
    }
    if (keyboard_check_pressed(vk_left)){
        audio_play_sound(sou_move_curser, 1, false);
        var_menu = var_menu - 1;
        if (var_menu == -1){
            var_menu = 2;
        }
        var_menu_amount = 0;
    }
    //leave room
    if (keyboard_check_pressed(vk_escape)){
        audio_play_sound(sou_select_curser, 1, false);
        var_menu = 0;
        room_goto(rm_start);
    }
    //reset
    if (var_menu_amount == 0){
        x = 45;
        y = 300;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Menu Text
///Start Menu Text
//Default text
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(fnt_op_title);
draw_set_color(c_black);

//Text Title
draw_set_colour(c_blue);
draw_rectangle(32,32,40,1050,0);
draw_rectangle(32,32,1700,40,0);
draw_set_colour(c_black);
draw_rectangle(32,32,360,115,0);
draw_set_colour(c_white);
draw_text(33,25,"Options");


//sub menus
//Game Play
switch (var_menu){
    case 0:{     
        draw_set_colour(c_gray);
        draw_rectangle(41, 150, 285, 200, 0);
        draw_set_colour(c_black);
        draw_rectangle(495, 150, 673, 200, 0);
        draw_rectangle(995, 150, 1143, 200, 0);
        draw_set_font(fnt_op_st);
        draw_set_colour(c_white);
        draw_text(43,145,"Game Play");
        draw_text(500,145,"Display");
        draw_text(1000,145,"Audio");
        draw_set_font(fnt_op_bace);
        draw_set_color(c_gray);
        draw_set_alpha(1);
        draw_rectangle(41 ,200 ,1600 ,1050 ,0);
        draw_set_colour(c_black);
        draw_text(65,295,"Case 0");
        draw_text(65,395,"Case 1");
        draw_text(65,495,"Case 2");
        break;
    }
//Display
    case 1:{
        draw_set_colour(c_gray);
        draw_rectangle(495, 150, 673, 200, 0);
        draw_set_colour(c_black);
        draw_rectangle(41, 150, 285, 200, 0);
        draw_rectangle(995, 150, 1143, 200, 0);
        draw_set_font(fnt_op_st);
        draw_set_colour(c_white);
        draw_text(43,145,"Game Play");
        draw_text(500,145,"Display");
        draw_text(1000,145,"Audio");
        draw_set_font(fnt_op_bace);
        draw_set_color(c_gray);
        draw_set_alpha(1);
        draw_rectangle(41 ,200 ,1600 ,1050 ,0);
        draw_set_colour(c_black);
        draw_text(65,295,"Fullscreen");
        draw_set_colour(c_green);
        if (var_op_fs == 1)
        {
            draw_rectangle(375,320,395,340,0); 
        }else{
            draw_rectangle(575,320,595,340,0);
        }
        draw_set_colour(c_black);
        draw_text(400,320,"On");
        draw_text(600,320,"Off");
        draw_text(65,395,"Case 1");
        draw_text(65,495,"Case 2");
        draw_text(65,595,"Case 3");
        break;
    }
//Audio
    case 2:{
        draw_set_colour(c_gray);
        draw_rectangle(995, 150, 1143, 200, 0);
        draw_set_colour(c_black);
        draw_rectangle(41, 150, 285, 200, 0);
        draw_rectangle(495, 150, 673, 200, 0);
        draw_set_font(fnt_op_st);
        draw_set_colour(c_white);
        draw_text(43,145,"Game Play");
        draw_text(500,145,"Display");
        draw_text(1000,145,"Audio");
        draw_set_font(fnt_op_bace);
        draw_set_color(c_gray);
        draw_set_alpha(1);
        draw_rectangle(41 ,200 ,1600 ,1050 ,0);
        draw_set_colour(c_black);
        draw_text(65,295,"Master Volume");
            draw_rectangle_colour(240,335,(900/var_master_vol),355,c_green,c_green,c_green,c_green,0);
        
        draw_text(65,395,"Music Volume");
            draw_rectangle_colour(240,435,900,455,c_green,c_white,c_green,c_green,0);
        
        draw_text(65,495,"Effects Volume");
            draw_rectangle_colour(240,535,900,555,c_green,c_green,c_green,c_green,0);
        
        draw_text(65,595,"Background Volume");
            draw_rectangle_colour(240,635,900,655,c_green,c_green,c_green,c_green,0);
        
        draw_text(65,695,"Other Volume");
            draw_rectangle_colour(240,735,900,755,c_green,c_green,c_green,c_green,0);
        
        //draw sliders
        break;
    }
}

draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
